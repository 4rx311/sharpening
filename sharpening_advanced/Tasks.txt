”рок 1. ѕользовательские коллекции
—оздайте коллекцию, в которой бы хранились наименовани€ 12 мес€цев, пор€дковый номер и количество дней в соответствующем мес€це.
–еализуйте возможность выбора мес€цев, как по пор€дковому номеру, так и количеству дней в мес€це, при этом результатом может быть не только один мес€ц.


”рок 2. —истемные коллекции
Ќесколькими способами создайте коллекцию, в которой можно хранить только целочисленные и вещественные значени€, по типу Ђсчет предпри€ти€ Ц доступна€ суммаї соответственно.


”рок 3. ѕрограммирование ввода-вывода
—оздайте файл, запишите в него произвольные данные и закройте файл. «атем снова откройте этот файл, прочитайте из него данные и выведете их на консоль.


”рок 4. –абота с текстом
Ќапишите регул€рное выражение, которое бы соответствовало номеру телефона в формате +x (xxx) xxx-xx-xx, где x Ц это цифра.


”рок 5. XML. ‘айлы конфигурации. –еестр.
—оздайте .xml файл, который соответствовал бы следующим требовани€м:

им€ файла: TelephoneBook.xml
корневой элемент: УMyContactsФ
тег УContactФ, и в нем должно быть записано им€ контакта и атрибут УTelephoneNumberФ со значением номера телефона.
сделать несколько тегов УContactФ с разными данными.
Ќаписать консольное приложение, которое будет искать контакт по ‘»ќ или по номеру телефона.

 
”рок 6. –ефлекси€
—оздайте свою пользовательскую сборку, опишите в ней класс CustomConvertor и статический метод ConvertTemperature Ц который переводи температуру из шкалы ÷ельси€ в шкалу ‘аренгейта.
—оздайте консольное приложение, в котором пользователь вводит температуру по ÷ельсию, а программа выводит ее по ‘аренгейту, использу€ рефлексию.

 
”рок 8. —ериализаци€
—оздайте класс, поддерживающий сериализацию. ¬ыполните сериализацию объекта этого класса в формате XML.
—начала используйте формат по умолчанию, а затем измените его таким образом, чтобы значени€ полей сохранились в виде атрибутов элементов XML.
—оздайте новое приложение, в котором выполните десериализацию объекта из предыдущего примера. ќтобразите состо€ние объекта на экране.